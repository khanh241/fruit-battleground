repeat wait() until game:IsLoaded()
local plr = game.Players.LocalPlayer
local cols = game.Workspace.Areas.Colloseum.CFrame
local dress = game.Workspace.Areas.Dressrosa.CFrame
local forest = game.Workspace.Areas.Forest.CFrame
local hum = plr.Character.Humanoid
function teleport(location)
    plr.Character.HumanoidRootPart.CFrame = location
end
function walkspeed(Text)
    hum.WalkSpeed = Text
end
function jumppower(Text)
    hum.JumpPower = Text
end
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()
local Window = Rayfield:CreateWindow({
    Name = "KhanhHub | kpt#????",
    LoadingTitle = "KhanhHub",
    LoadingSubtitle = "by kpt#????",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Big Hub"
    },
    Discord = {
       Enabled = true,
       Invite = "D4VsZSRCv8", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD.
       RememberJoins = false -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = true, -- Set this to true to use our key system
    KeySettings = {
       Title = "Khanh Hub",
       Subtitle = "Key System",
       Note = "Join the discord (https://discord.gg/D4VsZSRCv8)",
       FileName = "itsfine",
       SaveKey = true,
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = "deptrai"
    }
    })
    local Tab = Window:CreateTab("Teleport") -- Title, Image
    local Section = Tab:CreateSection("Places")

    local Button = Tab:CreateButton({
        Name = "Colloseum",
        Callback = function()
            teleport(cols)
        -- The function that takes place when the button is pressed
        end,
    })
    local Button1 = Tab:CreateButton({
        Name = "Dressrosa",
        Callback = function()
            teleport(dress)
        -- The function that takes place when the button is pressed
        end,
    })
    local Button2 = Tab:CreateButton({
        Name = "Forest",
        Callback = function()
            teleport(forest)
        -- The function that takes place when the button is pressed
        end,
    })

    local Tab1 = Window:CreateTab("Character") -- Title, Image
    local Input = Tab1:CreateInput({
    Name = "Speed",
    PlaceholderText = "Type amount of increase in Walk Speed",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        walkspeed(Text)
    -- The function that takes place when the input is changed
    -- The variable (Text) is a string for the value in the text box
    end,
    })
    local Input = Tab1:CreateInput({
    Name = "Jump Power",
    PlaceholderText = "Type amount of increase in Jump Power",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
       jumppower(Text)
    -- The function that takes place when the input is changed
    -- The variable (Text) is a string for the value in the text box
    end,
    })

    local Tab2 = Window:CreateTab("Fruit", 4483362458) -- Title, Image
    getgenv().a = false
    local Toggle = Tab2:CreateToggle({
        Name = "Auto Spin Fruit",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            getgenv().a = Value
        end,
    })
    spawn(function()
        while wait() do
            if getgenv().a then
                local args = {
                    [1] = "FruitsHandler",
                    [2] = "Spin",
                    [3] = {}
                }
                
                game:GetService("ReplicatedStorage").Replicator:InvokeServer(unpack(args))
            end
        end
    end)   

    local Tab3 = Window:CreateTab("Farm", 4483362458) -- Title, Image
    getgenv().b = false
    local Toggle = Tab3:CreateToggle({
        Name = "Auto Farm Fruit: Sand",
        CurrentValue = false,
        Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function(Value)
            getgenv().b = Value
        end,
    })
    spawn(function()
        while wait() do
            if getgenv().b then
                wait(1)
                local args = {
                    [1] = "Sand",
                    [2] = "Slicer",
                    [3] = {}
                }
                
                game:GetService("ReplicatedStorage").Replicator:InvokeServer(unpack(args))
                wait(1)
                local args = {
                    [1] = "Sand",
                    [2] = "Spada",
                    [3] = {}
                }
                
                game:GetService("ReplicatedStorage").Replicator:InvokeServer(unpack(args))
                wait(1)
                local args = {
                    [1] = "Sand",
                    [2] = "Swamp",
                    [3] = {}
                }
                
                game:GetService("ReplicatedStorage").Replicator:InvokeServer(unpack(args))
                wait(1)
                local args = {
                    [1] = "Sand",
                    [2] = "Sables: Pesado",
                    [3] = {}
                }
                
                game:GetService("ReplicatedStorage").Replicator:InvokeServer(unpack(args))
            end
        end
    end)
                





